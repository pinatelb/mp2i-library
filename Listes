{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "7e1f2c89-5b45-465e-87d0-db7ddd35ea4c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "val find_list : 'a -> 'a list -> bool = <fun>\n"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "val inverser_list : 'a list -> 'a list = <fun>\n"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "let rec find_list e l = match l with \n",
    "    |[] -> false\n",
    "    |e1::q -> e1 = e || (find_list e q)\n",
    "    \n",
    "let rec inverser_list = function \n",
    "    |[] -> []\n",
    "    |e::q -> (inverser_list q)@[e]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "8f0e6012-ea60-4da2-a065-262b6a4ffb65",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "- : bool = true\n"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "find_list 5 [1;9;6;3;4;2;8;5;7;6;1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "5a015112-09a8-4a71-8a18-d27ea4b52cc1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "- : int list = [1; 7; 4; 8; 3; 6; 9; 1]\n"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "inverser_list [1;9;6;3;8;4;7;1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "e4d7dfba-d734-4122-acf1-30cbc650254d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "val croissante : 'a list -> bool = <fun>\n"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "let rec croissante = function \n",
    "    |[] -> failwith \"List Vide\"\n",
    "    |[e] -> true\n",
    "    |e1::e2::q -> e1<=e2 && croissante (e2::q)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "ac2aa535-5aa3-455c-94c0-72ab399b468f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "- : bool = true\n"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "croissante [1;3;5;6;6;7;8;9]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5ccc7fbb-ea6d-4011-8783-e6337aa35abf",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "OCaml default",
   "language": "OCaml",
   "name": "ocaml-jupyter"
  },
  "language_info": {
   "codemirror_mode": "text/x-ocaml",
   "file_extension": ".ml",
   "mimetype": "text/x-ocaml",
   "name": "OCaml",
   "nbconverter_exporter": null,
   "pygments_lexer": "OCaml",
   "version": "4.08.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
+
